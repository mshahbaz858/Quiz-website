{"ast":null,"code":"import \"core-js/modules/es.array.index-of\";\nimport \"core-js/modules/es.function.name\";\nimport React from 'react';\nimport Text from 'rsg-components/Text';\nimport Code from 'rsg-components/Code';\nimport { showSpaces, unquote } from './util';\nvar defaultValueBlacklist = ['null', 'undefined'];\nexport default function renderDefault(prop) {\n  // Workaround for issue https://github.com/reactjs/react-docgen/issues/221\n  // If prop has defaultValue it can not be required\n  if (prop.defaultValue) {\n    var defaultValueString = showSpaces(unquote(String(prop.defaultValue.value)));\n\n    if (prop.type || prop.flowType || prop.tsType) {\n      var propName = prop.type ? prop.type.name : prop.flowType ? prop.flowType.type : prop.tsType && prop.tsType.type;\n\n      if (defaultValueBlacklist.indexOf(prop.defaultValue.value) > -1) {\n        return /*#__PURE__*/React.createElement(Code, null, defaultValueString);\n      } else if (propName === 'func' || propName === 'function') {\n        return /*#__PURE__*/React.createElement(Text, {\n          size: \"small\",\n          color: \"light\",\n          underlined: true,\n          title: defaultValueString\n        }, \"Function\");\n      } else if (propName === 'shape' || propName === 'object') {\n        try {\n          // We eval source code to be able to format the defaultProp here. This\n          // can be considered safe, as it is the source code that is evaled,\n          // which is from a known source and safe by default\n          // eslint-disable-next-line no-eval\n          var object = eval(\"(\" + prop.defaultValue.value + \")\");\n          return /*#__PURE__*/React.createElement(Text, {\n            size: \"small\",\n            color: \"light\",\n            underlined: true,\n            title: JSON.stringify(object, null, 2)\n          }, \"Shape\");\n        } catch (e) {\n          // eval will throw if it contains a reference to a property not in the\n          // local scope. To avoid any breakage we fall back to rendering the\n          // prop without any formatting\n          return /*#__PURE__*/React.createElement(Text, {\n            size: \"small\",\n            color: \"light\",\n            underlined: true,\n            title: prop.defaultValue.value\n          }, \"Shape\");\n        }\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(Code, null, defaultValueString);\n  } else if (prop.required) {\n    return /*#__PURE__*/React.createElement(Text, {\n      size: \"small\",\n      color: \"light\"\n    }, \"Required\");\n  }\n\n  return '';\n}","map":{"version":3,"sources":["D:/DEVELOPMENT/react-project/Quiz-react/react-quiz-app/node_modules/react-styleguidist/lib/client/rsg-components/Props/renderDefault.js"],"names":["React","Text","Code","showSpaces","unquote","defaultValueBlacklist","renderDefault","prop","defaultValue","defaultValueString","String","value","type","flowType","tsType","propName","name","indexOf","createElement","size","color","underlined","title","object","eval","JSON","stringify","e","required"],"mappings":"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","sourcesContent":["import \"core-js/modules/es.array.index-of\";\nimport \"core-js/modules/es.function.name\";\nimport React from 'react';\nimport Text from 'rsg-components/Text';\nimport Code from 'rsg-components/Code';\nimport { showSpaces, unquote } from './util';\nvar defaultValueBlacklist = ['null', 'undefined'];\nexport default function renderDefault(prop) {\n  // Workaround for issue https://github.com/reactjs/react-docgen/issues/221\n  // If prop has defaultValue it can not be required\n  if (prop.defaultValue) {\n    var defaultValueString = showSpaces(unquote(String(prop.defaultValue.value)));\n\n    if (prop.type || prop.flowType || prop.tsType) {\n      var propName = prop.type ? prop.type.name : prop.flowType ? prop.flowType.type : prop.tsType && prop.tsType.type;\n\n      if (defaultValueBlacklist.indexOf(prop.defaultValue.value) > -1) {\n        return /*#__PURE__*/React.createElement(Code, null, defaultValueString);\n      } else if (propName === 'func' || propName === 'function') {\n        return /*#__PURE__*/React.createElement(Text, {\n          size: \"small\",\n          color: \"light\",\n          underlined: true,\n          title: defaultValueString\n        }, \"Function\");\n      } else if (propName === 'shape' || propName === 'object') {\n        try {\n          // We eval source code to be able to format the defaultProp here. This\n          // can be considered safe, as it is the source code that is evaled,\n          // which is from a known source and safe by default\n          // eslint-disable-next-line no-eval\n          var object = eval(\"(\" + prop.defaultValue.value + \")\");\n          return /*#__PURE__*/React.createElement(Text, {\n            size: \"small\",\n            color: \"light\",\n            underlined: true,\n            title: JSON.stringify(object, null, 2)\n          }, \"Shape\");\n        } catch (e) {\n          // eval will throw if it contains a reference to a property not in the\n          // local scope. To avoid any breakage we fall back to rendering the\n          // prop without any formatting\n          return /*#__PURE__*/React.createElement(Text, {\n            size: \"small\",\n            color: \"light\",\n            underlined: true,\n            title: prop.defaultValue.value\n          }, \"Shape\");\n        }\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(Code, null, defaultValueString);\n  } else if (prop.required) {\n    return /*#__PURE__*/React.createElement(Text, {\n      size: \"small\",\n      color: \"light\"\n    }, \"Required\");\n  }\n\n  return '';\n}"]},"metadata":{},"sourceType":"module"}