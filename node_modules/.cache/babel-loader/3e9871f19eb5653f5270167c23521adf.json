{"ast":null,"code":"import \"core-js/modules/es.array.concat\";\nimport \"core-js/modules/es.array.map\";\nimport \"core-js/modules/es.object.assign\";\nimport getUrl from './getUrl';\n/**\n * Do things that are hard or impossible to do in a loader: we don’t have access to component name\n * and props in the styleguide-loader because we’re using `require` to load the component module.\n *\n * @param {Array} components\n * @return {Array}\n */\n\nexport default function processComponents(components, _ref) {\n  var useRouterLinks = _ref.useRouterLinks,\n      useHashId = _ref.useHashId,\n      hashPath = _ref.hashPath;\n  return components.map(function (component) {\n    var newComponent = component.props ? Object.assign({}, component, {\n      // Add .name shortcuts for names instead of .props.displayName.\n      name: component.props.displayName,\n      visibleName: component.props.visibleName || component.props.displayName,\n      props: Object.assign({}, component.props, {\n        // Append @example doclet to all examples\n        examples: [].concat(component.props.examples || [], component.props.example || [])\n      }),\n      href: component.href || getUrl({\n        name: component.props.displayName,\n        slug: component.slug,\n        anchor: !useRouterLinks,\n        hashPath: useRouterLinks ? hashPath : false,\n        useSlugAsIdParam: useRouterLinks ? useHashId : false\n      })\n    }) : {};\n    return newComponent;\n  });\n}","map":{"version":3,"sources":["D:/DEVELOPMENT/react-project/Quiz-react/react-quiz-app/node_modules/react-styleguidist/lib/client/utils/processComponents.js"],"names":["getUrl","processComponents","components","_ref","useRouterLinks","useHashId","hashPath","map","component","newComponent","props","Object","assign","name","displayName","visibleName","examples","concat","example","href","slug","anchor","useSlugAsIdParam"],"mappings":"AAAA,OAAO,iCAAP;AACA,OAAO,8BAAP;AACA,OAAO,kCAAP;AACA,OAAOA,MAAP,MAAmB,UAAnB;AAEA;;;;;;;;AAOA,eAAe,SAASC,iBAAT,CAA2BC,UAA3B,EAAuCC,IAAvC,EAA6C;AAC1D,MAAIC,cAAc,GAAGD,IAAI,CAACC,cAA1B;AAAA,MACIC,SAAS,GAAGF,IAAI,CAACE,SADrB;AAAA,MAEIC,QAAQ,GAAGH,IAAI,CAACG,QAFpB;AAGA,SAAOJ,UAAU,CAACK,GAAX,CAAe,UAAUC,SAAV,EAAqB;AACzC,QAAIC,YAAY,GAAGD,SAAS,CAACE,KAAV,GAAkBC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,SAAlB,EAA6B;AAChE;AACAK,MAAAA,IAAI,EAAEL,SAAS,CAACE,KAAV,CAAgBI,WAF0C;AAGhEC,MAAAA,WAAW,EAAEP,SAAS,CAACE,KAAV,CAAgBK,WAAhB,IAA+BP,SAAS,CAACE,KAAV,CAAgBI,WAHI;AAIhEJ,MAAAA,KAAK,EAAEC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,SAAS,CAACE,KAA5B,EAAmC;AACxC;AACAM,QAAAA,QAAQ,EAAE,GAAGC,MAAH,CAAUT,SAAS,CAACE,KAAV,CAAgBM,QAAhB,IAA4B,EAAtC,EAA0CR,SAAS,CAACE,KAAV,CAAgBQ,OAAhB,IAA2B,EAArE;AAF8B,OAAnC,CAJyD;AAQhEC,MAAAA,IAAI,EAAEX,SAAS,CAACW,IAAV,IAAkBnB,MAAM,CAAC;AAC7Ba,QAAAA,IAAI,EAAEL,SAAS,CAACE,KAAV,CAAgBI,WADO;AAE7BM,QAAAA,IAAI,EAAEZ,SAAS,CAACY,IAFa;AAG7BC,QAAAA,MAAM,EAAE,CAACjB,cAHoB;AAI7BE,QAAAA,QAAQ,EAAEF,cAAc,GAAGE,QAAH,GAAc,KAJT;AAK7BgB,QAAAA,gBAAgB,EAAElB,cAAc,GAAGC,SAAH,GAAe;AALlB,OAAD;AARkC,KAA7B,CAAlB,GAed,EAfL;AAgBA,WAAOI,YAAP;AACD,GAlBM,CAAP;AAmBD","sourcesContent":["import \"core-js/modules/es.array.concat\";\nimport \"core-js/modules/es.array.map\";\nimport \"core-js/modules/es.object.assign\";\nimport getUrl from './getUrl';\n\n/**\n * Do things that are hard or impossible to do in a loader: we don’t have access to component name\n * and props in the styleguide-loader because we’re using `require` to load the component module.\n *\n * @param {Array} components\n * @return {Array}\n */\nexport default function processComponents(components, _ref) {\n  var useRouterLinks = _ref.useRouterLinks,\n      useHashId = _ref.useHashId,\n      hashPath = _ref.hashPath;\n  return components.map(function (component) {\n    var newComponent = component.props ? Object.assign({}, component, {\n      // Add .name shortcuts for names instead of .props.displayName.\n      name: component.props.displayName,\n      visibleName: component.props.visibleName || component.props.displayName,\n      props: Object.assign({}, component.props, {\n        // Append @example doclet to all examples\n        examples: [].concat(component.props.examples || [], component.props.example || [])\n      }),\n      href: component.href || getUrl({\n        name: component.props.displayName,\n        slug: component.slug,\n        anchor: !useRouterLinks,\n        hashPath: useRouterLinks ? hashPath : false,\n        useSlugAsIdParam: useRouterLinks ? useHashId : false\n      })\n    }) : {};\n    return newComponent;\n  });\n}"]},"metadata":{},"sourceType":"module"}