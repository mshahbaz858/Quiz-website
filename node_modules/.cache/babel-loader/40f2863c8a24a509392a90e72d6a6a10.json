{"ast":null,"code":"var _jsxFileName = \"E:\\\\DEVELOPMENT\\\\react-project\\\\Quiz-react\\\\react-quiz-app\\\\src\\\\views\\\\Level1.js\";\nimport React, { Component } from 'react';\nimport { Input, Button, Progress, Divider } from \"antd\";\nimport { level1 } from '../datas';\nimport { Link } from 'react-router-dom';\nimport { AudioOutlined } from '@ant-design/icons';\n\nclass Level1 extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: \"\",\n      timeOut: false,\n      round: 0,\n      timer: 10,\n      randomTense: \"\",\n      wrongAnswer: \"\",\n      wrongAnswers: []\n    };\n\n    this.startTimeOut = () => {\n      this.timeout = setTimeout(() => {\n        this.setState({\n          timeOut: true\n        });\n      }, 10000);\n      this.interval = setInterval(() => {\n        this.setState({\n          timer: this.state.timer - 1\n        });\n      }, 1000);\n    };\n\n    this.randomTense = async () => {\n      let TenseArray = ['simple', 'past']; //We need to get one tense between simple and past randomly \n\n      let randomTense = await TenseArray[Math.floor(Math.random() * TenseArray.length)];\n      this.setState({\n        randomTense: randomTense\n      });\n    };\n\n    this.handleRestart = () => {\n      //1. set state  timer : 0\n      this.setState({\n        timer: 10,\n        timeOut: false,\n        wrongAnswer: \"\"\n      }); //2. trigger startTimeOut again \n\n      this.startTimeOut();\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        value: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      if (this.state.timeOut) return alert(\"Please click restart button to keep doing it\");\n      if (!this.state.value.trim()) return alert(\"Please Type something first!\");\n      this.setState({\n        value: \"\",\n        wrongAnswer: \"\"\n      }); //we need to check if our answer is right or not  \n\n      this.checkMatched();\n    };\n\n    this.checkMatched = () => {\n      //we need to check whether our answer was right or not \n      //know Tense for the question \n      (this.state.randomTense === 'simple' ? level1[this.state.round].simple : level1[this.state.round].past) === this.state.value ? //true \n      this.setState({\n        round: this.state.round + 1,\n        timer: 10,\n        wrongAnswer: \"\"\n      }, () => {\n        this.randomTense(); //stop the setTimeout and start new setTimeout,  not for setInterval \n\n        clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => {\n          this.setState({\n            timeOut: true\n          });\n        }, 10000);\n      }) : //false\n      this.setState({\n        wrongAnswer: this.state.randomTense === 'simple' ? `${level1[this.state.round].simple}` : `${level1[this.state.round].past}`\n      }, () => {\n        this.setState({\n          round: this.state.round + 1,\n          timer: 10,\n          wrongAnswers: this.state.wrongAnswers.concat(level1[this.state.round].voca)\n        });\n        this.randomTense();\n        clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => {\n          this.setState({\n            timeOut: true\n          });\n        }, 10000);\n      });\n    };\n\n    this.handleRedirect = () => {\n      setTimeout(() => {\n        window.location.reload();\n      }, 10);\n    };\n\n    this.handleAudio = event => {\n      event.preventDefault();\n      var elm = event.target;\n      var audio = document.getElementById('audio');\n      var source = document.getElementById('audioSource');\n      source.src = elm.getAttribute('data-value');\n      audio.load(); //call this to just preload the audio without playing \n\n      audio.play(); //call this to play the song right away\n    };\n  }\n\n  componentDidMount() {\n    this.randomTense();\n    this.startTimeOut();\n  }\n\n  componentDidUpdate() {\n    if (this.state.timer === 0) {\n      clearInterval(this.interval);\n    }\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timeout);\n    clearInterval(this.interval);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: '1rem',\n        border: '1px solid grey',\n        borderRadius: '4px',\n        maxWidth: 400,\n        margin: '3rem auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, this.state.round < level1.length ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 25\n      }\n    }, \"Vocaburary Game\"), /*#__PURE__*/React.createElement(Progress, {\n      percent: this.state.round / level1.length * 100,\n      status: \"active\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 29\n      }\n    }, \"LEVEL 1\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 29\n      }\n    }, this.state.round, \"/\", level1.length)), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        marginBottom: 0,\n        color: 'grey'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 25\n      }\n    }, \"Infinitive\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 25\n      }\n    }, level1[this.state.round].voca), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontSize: '1rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 25\n      }\n    }, \"Answer the voca`s \", /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 47\n      }\n    }, this.state.randomTense === 'simple' ? 'simple past' : 'past participle')), /*#__PURE__*/React.createElement(\"form\", {\n      style: {\n        padding: '1rem 0'\n      },\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      name: \"value\",\n      onChange: this.handleChange,\n      value: this.state.value,\n      id: \"voca\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      className: true,\n      type: \"submit\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 33\n      }\n    }, \"Submit\"))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: `${this.state.timer <= 8 && 'disabled'}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 29\n      }\n    }, \"5\"), /*#__PURE__*/React.createElement(Button, {\n      className: `${this.state.timer <= 6 && 'disabled'}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 29\n      }\n    }, \"4\"), /*#__PURE__*/React.createElement(Button, {\n      className: `${this.state.timer <= 4 && 'disabled'}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 29\n      }\n    }, \"3\"), /*#__PURE__*/React.createElement(Button, {\n      className: `${this.state.timer <= 2 && 'disabled'}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 29\n      }\n    }, \"2\"), /*#__PURE__*/React.createElement(Button, {\n      className: `${this.state.timer <= 0 && 'disabled'}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 29\n      }\n    }, \"1\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleRestart,\n      style: {\n        display: this.state.timeOut ? 'block' : 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 29\n      }\n    }, \"Click to Restart!\")), this.state.wrongAnswer && /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 33\n      }\n    }, \"Wrong! Correct answer: \"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      style: {\n        display: 'block'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      onClick: this.handleAudio,\n      \"data-value\": level1[this.state.round - 1] ? level1[this.state.round - 1].mp3 : level1[this.state.round].mp3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(AudioOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 45\n      }\n    }), \"   \", this.state.wrongAnswer)), /*#__PURE__*/React.createElement(\"audio\", {\n      id: \"audio\",\n      controls: true,\n      style: {\n        display: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"source\", {\n      id: \"audioSource\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 41\n      }\n    }), \"Your browser does not support the audio format.\")))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 25\n      }\n    }, \"Reviews the wrong answers\"), this.state.wrongAnswers.map((answer, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 37\n      }\n    }, answer)))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-evenly'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleRedirect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 29\n      }\n    }, \"Retry\"), /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/test2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 37\n      }\n    }, \"Level2\")))));\n  }\n\n}\n\nexport default Level1;","map":{"version":3,"sources":["E:/DEVELOPMENT/react-project/Quiz-react/react-quiz-app/src/views/Level1.js"],"names":["React","Component","Input","Button","Progress","Divider","level1","Link","AudioOutlined","Level1","state","value","timeOut","round","timer","randomTense","wrongAnswer","wrongAnswers","startTimeOut","timeout","setTimeout","setState","interval","setInterval","TenseArray","Math","floor","random","length","handleRestart","handleChange","event","target","handleSubmit","preventDefault","alert","trim","checkMatched","simple","past","clearTimeout","concat","voca","handleRedirect","window","location","reload","handleAudio","elm","audio","document","getElementById","source","src","getAttribute","load","play","componentDidMount","componentDidUpdate","clearInterval","componentWillUnmount","render","padding","border","borderRadius","maxWidth","margin","display","justifyContent","marginBottom","color","fontSize","mp3","map","answer","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,OAAlC,QAAiD,MAAjD;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,aAAT,QAA8B,mBAA9B;;AAEA,MAAMC,MAAN,SAAqBR,SAArB,CAA+B;AAAA;AAAA;AAAA,SAE3BS,KAF2B,GAEnB;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,OAAO,EAAE,KAFL;AAGJC,MAAAA,KAAK,EAAE,CAHH;AAIJC,MAAAA,KAAK,EAAE,EAJH;AAKJC,MAAAA,WAAW,EAAE,EALT;AAMJC,MAAAA,WAAW,EAAE,EANT;AAOJC,MAAAA,YAAY,EAAE;AAPV,KAFmB;;AAAA,SAkB3BC,YAlB2B,GAkBZ,MAAM;AACjB,WAAKC,OAAL,GAAeC,UAAU,CAAC,MAAM;AAC5B,aAAKC,QAAL,CAAc;AAAET,UAAAA,OAAO,EAAE;AAAX,SAAd;AACH,OAFwB,EAEtB,KAFsB,CAAzB;AAKA,WAAKU,QAAL,GAAgBC,WAAW,CAAC,MAAM;AAC9B,aAAKF,QAAL,CAAc;AAAEP,UAAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWI,KAAX,GAAmB;AAA5B,SAAd;AACH,OAF0B,EAExB,IAFwB,CAA3B;AAGH,KA3B0B;;AAAA,SA0C3BC,WA1C2B,GA0Cb,YAAY;AACtB,UAAIS,UAAU,GAAG,CAAC,QAAD,EAAW,MAAX,CAAjB,CADsB,CAEtB;;AACA,UAAIT,WAAW,GAAG,MAAMS,UAAU,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBH,UAAU,CAACI,MAAtC,CAAD,CAAlC;AACA,WAAKP,QAAL,CAAc;AAAEN,QAAAA,WAAW,EAAEA;AAAf,OAAd;AACH,KA/C0B;;AAAA,SAiD3Bc,aAjD2B,GAiDX,MAAM;AAClB;AACA,WAAKR,QAAL,CAAc;AAAEP,QAAAA,KAAK,EAAE,EAAT;AAAaF,QAAAA,OAAO,EAAE,KAAtB;AAA6BI,QAAAA,WAAW,EAAE;AAA1C,OAAd,EAFkB,CAIlB;;AACA,WAAKE,YAAL;AACH,KAvD0B;;AAAA,SAyD3BY,YAzD2B,GAyDXC,KAAD,IAAW;AACtB,WAAKV,QAAL,CAAc;AAAEV,QAAAA,KAAK,EAAEoB,KAAK,CAACC,MAAN,CAAarB;AAAtB,OAAd;AACH,KA3D0B;;AAAA,SA6D3BsB,YA7D2B,GA6DXF,KAAD,IAAW;AACtBA,MAAAA,KAAK,CAACG,cAAN;AAEA,UAAI,KAAKxB,KAAL,CAAWE,OAAf,EAAwB,OAAOuB,KAAK,CAAC,8CAAD,CAAZ;AAExB,UAAI,CAAC,KAAKzB,KAAL,CAAWC,KAAX,CAAiByB,IAAjB,EAAL,EAA8B,OAAOD,KAAK,CAAC,8BAAD,CAAZ;AAE9B,WAAKd,QAAL,CAAc;AAAEV,QAAAA,KAAK,EAAE,EAAT;AAAaK,QAAAA,WAAW,EAAE;AAA1B,OAAd,EAPsB,CAStB;;AACA,WAAKqB,YAAL;AAEH,KAzE0B;;AAAA,SA2E3BA,YA3E2B,GA2EZ,MAAM;AAEjB;AACA;AACA,OAAC,KAAK3B,KAAL,CAAWK,WAAX,KAA2B,QAA3B,GAAsCT,MAAM,CAAC,KAAKI,KAAL,CAAWG,KAAZ,CAAN,CAAyByB,MAA/D,GAAwEhC,MAAM,CAAC,KAAKI,KAAL,CAAWG,KAAZ,CAAN,CAAyB0B,IAAlG,MACQ,KAAK7B,KAAL,CAAWC,KADnB,GAEI;AACA,WAAKU,QAAL,CAAc;AAAER,QAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG,KAAX,GAAmB,CAA5B;AAA+BC,QAAAA,KAAK,EAAE,EAAtC;AAA0CE,QAAAA,WAAW,EAAE;AAAvD,OAAd,EAA2E,MAAM;AAE7E,aAAKD,WAAL,GAF6E,CAG7E;;AACAyB,QAAAA,YAAY,CAAC,KAAKrB,OAAN,CAAZ;AACA,aAAKA,OAAL,GAAeC,UAAU,CAAC,MAAM;AAC5B,eAAKC,QAAL,CAAc;AAAET,YAAAA,OAAO,EAAE;AAAX,WAAd;AACH,SAFwB,EAEtB,KAFsB,CAAzB;AAGH,OARD,CAHJ,GAaI;AACA,WAAKS,QAAL,CAAc;AACVL,QAAAA,WAAW,EAAE,KAAKN,KAAL,CAAWK,WAAX,KAA2B,QAA3B,GAAuC,GAAET,MAAM,CAAC,KAAKI,KAAL,CAAWG,KAAZ,CAAN,CAAyByB,MAAO,EAAzE,GACN,GAAEhC,MAAM,CAAC,KAAKI,KAAL,CAAWG,KAAZ,CAAN,CAAyB0B,IAAK;AAF7B,OAAd,EAGG,MAAM;AACL,aAAKlB,QAAL,CAAc;AACVR,UAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG,KAAX,GAAmB,CADhB;AACmBC,UAAAA,KAAK,EAAE,EAD1B;AAEVG,UAAAA,YAAY,EAAE,KAAKP,KAAL,CAAWO,YAAX,CAAwBwB,MAAxB,CAA+BnC,MAAM,CAAC,KAAKI,KAAL,CAAWG,KAAZ,CAAN,CAAyB6B,IAAxD;AAFJ,SAAd;AAIA,aAAK3B,WAAL;AACAyB,QAAAA,YAAY,CAAC,KAAKrB,OAAN,CAAZ;AACA,aAAKA,OAAL,GAAeC,UAAU,CAAC,MAAM;AAC5B,eAAKC,QAAL,CAAc;AAAET,YAAAA,OAAO,EAAE;AAAX,WAAd;AACH,SAFwB,EAEtB,KAFsB,CAAzB;AAGH,OAbD,CAdJ;AA4BH,KA3G0B;;AAAA,SA6G3B+B,cA7G2B,GA6GV,MAAM;AACnBvB,MAAAA,UAAU,CAAC,MAAM;AACbwB,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,OAFS,EAEP,EAFO,CAAV;AAGH,KAjH0B;;AAAA,SAmH3BC,WAnH2B,GAmHZhB,KAAD,IAAW;AACrBA,MAAAA,KAAK,CAACG,cAAN;AACA,UAAIc,GAAG,GAAGjB,KAAK,CAACC,MAAhB;AACA,UAAIiB,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAZ;AACA,UAAIC,MAAM,GAAGF,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAb;AACAC,MAAAA,MAAM,CAACC,GAAP,GAAaL,GAAG,CAACM,YAAJ,CAAiB,YAAjB,CAAb;AACAL,MAAAA,KAAK,CAACM,IAAN,GANqB,CAMP;;AACdN,MAAAA,KAAK,CAACO,IAAN,GAPqB,CAOP;AACjB,KA3H0B;AAAA;;AAa3BC,EAAAA,iBAAiB,GAAG;AAChB,SAAK1C,WAAL;AACA,SAAKG,YAAL;AACH;;AAcDwC,EAAAA,kBAAkB,GAAG;AACjB,QAAI,KAAKhD,KAAL,CAAWI,KAAX,KAAqB,CAAzB,EAA4B;AACxB6C,MAAAA,aAAa,CAAC,KAAKrC,QAAN,CAAb;AACH;AACJ;;AAEDsC,EAAAA,oBAAoB,GAAG;AACnBpB,IAAAA,YAAY,CAAC,KAAKrB,OAAN,CAAZ;AACAwC,IAAAA,aAAa,CAAC,KAAKrC,QAAN,CAAb;AACH;;AAsFDuC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,MAAM,EAAE,gBAA3B;AAA6CC,QAAAA,YAAY,EAAE,KAA3D;AAAkEC,QAAAA,QAAQ,EAAE,GAA5E;AAAiFC,QAAAA,MAAM,EAAE;AAAzF,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEK,KAAKxD,KAAL,CAAWG,KAAX,GAAmBP,MAAM,CAACsB,MAA1B,gBACG,uDACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,eAGI,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAE,KAAKlB,KAAL,CAAWG,KAAX,GAAmBP,MAAM,CAACsB,MAA1B,GAAmC,GAAtD;AAA2D,MAAA,MAAM,EAAC,QAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,eAKI;AAAK,MAAA,KAAK,EAAE;AAAEuC,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,cAAc,EAAE;AAAnC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAK1D,KAAL,CAAWG,KAAhB,OAAwBP,MAAM,CAACsB,MAA/B,CAFJ,CALJ,eAUI;AAAM,MAAA,KAAK,EAAE;AAAEyC,QAAAA,YAAY,EAAE,CAAhB;AAAmBC,QAAAA,KAAK,EAAE;AAA1B,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKhE,MAAM,CAAC,KAAKI,KAAL,CAAWG,KAAZ,CAAN,CAAyB6B,IAA9B,CAXJ,eAaI;AAAK,MAAA,KAAK,EAAE;AAAE6B,QAAAA,QAAQ,EAAE;AAAZ,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CACsB;AAAM,MAAA,KAAK,EAAE;AAAED,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACb,KAAK5D,KAAL,CAAWK,WAAX,KAA2B,QAA3B,GAAsC,aAAtC,GAAsD,iBADzC,CADtB,CAbJ,eAoBI;AAAM,MAAA,KAAK,EAAE;AAAE+C,QAAAA,OAAO,EAAE;AAAX,OAAb;AAAoC,MAAA,QAAQ,EAAE,KAAK7B,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAE;AAAEkC,QAAAA,OAAO,EAAE;AAAX,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,QAAQ,EAAE,KAAKrC,YAFnB;AAGI,MAAA,KAAK,EAAE,KAAKpB,KAAL,CAAWC,KAHtB;AAII,MAAA,EAAE,EAAC,MAJP;AAKI,MAAA,IAAI,EAAC,MALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eASI,oBAAC,MAAD;AACI,MAAA,SAAS,MADb;AAEI,MAAA,IAAI,EAAC,QAFT;AAGI,MAAA,OAAO,EAAE,KAAKsB,YAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ,CADJ,CApBJ,eAyCI;AAAK,MAAA,KAAK,EAAE;AAAEkC,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,cAAc,EAAE;AAAnC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAG,GAAE,KAAK1D,KAAL,CAAWI,KAAX,IAAoB,CAApB,IAAyB,UAAW,EAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,eAEI,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAG,GAAE,KAAKJ,KAAL,CAAWI,KAAX,IAAoB,CAApB,IAAyB,UAAW,EAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ,eAGI,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAG,GAAE,KAAKJ,KAAL,CAAWI,KAAX,IAAoB,CAApB,IAAyB,UAAW,EAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHJ,eAII,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAG,GAAE,KAAKJ,KAAL,CAAWI,KAAX,IAAoB,CAApB,IAAyB,UAAW,EAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJJ,eAKI,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAG,GAAE,KAAKJ,KAAL,CAAWI,KAAX,IAAoB,CAApB,IAAyB,UAAW,EAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALJ,eAMI,oBAAC,MAAD;AACI,MAAA,OAAO,EAAE,KAAKe,aADlB;AAEI,MAAA,KAAK,EAAE;AAAEsC,QAAAA,OAAO,EAAE,KAAKzD,KAAL,CAAWE,OAAX,GAAqB,OAArB,GAA+B;AAA1C,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BANJ,CAzCJ,EA0DK,KAAKF,KAAL,CAAWM,WAAX,iBACG,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,KAAK,EAAE;AAAEmD,QAAAA,OAAO,EAAE;AAAX,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,OAAO,EAAE,KAAKpB,WADlB;AAEI,oBAAYzC,MAAM,CAAC,KAAKI,KAAL,CAAWG,KAAX,GAAmB,CAApB,CAAN,GAA+BP,MAAM,CAAC,KAAKI,KAAL,CAAWG,KAAX,GAAmB,CAApB,CAAN,CAA6B2D,GAA5D,GAAkElE,MAAM,CAAC,KAAKI,KAAL,CAAWG,KAAZ,CAAN,CAAyB2D,GAF3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,SAIyB,KAAK9D,KAAL,CAAWM,WAJpC,CADJ,CADJ,eAUI;AAAO,MAAA,EAAE,EAAC,OAAV;AAAkB,MAAA,QAAQ,MAA1B;AAA2B,MAAA,KAAK,EAAE;AAAEmD,QAAAA,OAAO,EAAE;AAAX,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,EAAE,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,oDAVJ,CAHJ,CA3DR,CADH,gBAmFG,uDACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,EAEK,KAAKzD,KAAL,CAAWO,YAAX,CAAwBwD,GAAxB,CAA4B,CAACC,MAAD,EAASC,KAAT,kBACzB;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,MADL,CADJ,CADJ,CADH,CAFL,eAYI;AAAK,MAAA,KAAK,EAAE;AAAEP,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,cAAc,EAAE;AAAnC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKzB,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAQ,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAR,CAFJ,CAZJ,CArFR,CADJ;AA0GH;;AAxO0B;;AA4O/B,eAAelC,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Input, Button, Progress, Divider } from \"antd\";\nimport { level1 } from '../datas';\nimport { Link } from 'react-router-dom';\nimport { AudioOutlined } from '@ant-design/icons'\n\nclass Level1 extends Component {\n\n    state = {\n        value: \"\",\n        timeOut: false,\n        round: 0,\n        timer: 10,\n        randomTense: \"\",\n        wrongAnswer: \"\",\n        wrongAnswers: []\n    }\n\n\n    componentDidMount() {\n        this.randomTense()\n        this.startTimeOut()\n    }\n\n    startTimeOut = () => {\n        this.timeout = setTimeout(() => {\n            this.setState({ timeOut: true })\n        }, 10000)\n\n\n        this.interval = setInterval(() => {\n            this.setState({ timer: this.state.timer - 1 })\n        }, 1000)\n    }\n\n\n    componentDidUpdate() {\n        if (this.state.timer === 0) {\n            clearInterval(this.interval)\n        }\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.timeout)\n        clearInterval(this.interval)\n    }\n\n\n    randomTense = async () => {\n        let TenseArray = ['simple', 'past']\n        //We need to get one tense between simple and past randomly \n        let randomTense = await TenseArray[Math.floor(Math.random() * TenseArray.length)]\n        this.setState({ randomTense: randomTense })\n    }\n\n    handleRestart = () => {\n        //1. set state  timer : 0\n        this.setState({ timer: 10, timeOut: false, wrongAnswer: \"\" })\n\n        //2. trigger startTimeOut again \n        this.startTimeOut();\n    }\n\n    handleChange = (event) => {\n        this.setState({ value: event.target.value })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        if (this.state.timeOut) return alert(\"Please click restart button to keep doing it\");\n\n        if (!this.state.value.trim()) return alert(\"Please Type something first!\")\n\n        this.setState({ value: \"\", wrongAnswer: \"\" })\n\n        //we need to check if our answer is right or not  \n        this.checkMatched()\n\n    }\n\n    checkMatched = () => {\n\n        //we need to check whether our answer was right or not \n        //know Tense for the question \n        (this.state.randomTense === 'simple' ? level1[this.state.round].simple : level1[this.state.round].past)\n            === this.state.value ?\n            //true \n            this.setState({ round: this.state.round + 1, timer: 10, wrongAnswer: \"\" }, () => {\n\n                this.randomTense()\n                //stop the setTimeout and start new setTimeout,  not for setInterval \n                clearTimeout(this.timeout);\n                this.timeout = setTimeout(() => {\n                    this.setState({ timeOut: true })\n                }, 10000)\n            })\n            :\n            //false\n            this.setState({\n                wrongAnswer: this.state.randomTense === 'simple' ? `${level1[this.state.round].simple}`\n                    : `${level1[this.state.round].past}`\n            }, () => {\n                this.setState({\n                    round: this.state.round + 1, timer: 10,\n                    wrongAnswers: this.state.wrongAnswers.concat(level1[this.state.round].voca)\n                })\n                this.randomTense()\n                clearTimeout(this.timeout);\n                this.timeout = setTimeout(() => {\n                    this.setState({ timeOut: true })\n                }, 10000)\n            })\n    }\n\n    handleRedirect = () => {\n        setTimeout(() => {\n            window.location.reload();\n        }, 10);\n    }\n\n    handleAudio = (event) => {\n        event.preventDefault();\n        var elm = event.target;\n        var audio = document.getElementById('audio');\n        var source = document.getElementById('audioSource');\n        source.src = elm.getAttribute('data-value')\n        audio.load(); //call this to just preload the audio without playing \n        audio.play(); //call this to play the song right away\n    }\n\n    render() {\n        return (\n            <div style={{ padding: '1rem', border: '1px solid grey', borderRadius: '4px', maxWidth: 400, margin: '3rem auto' }}>\n\n                {this.state.round < level1.length ?\n                    <>\n                        <h1>Vocaburary Game</h1>\n\n                        <Progress percent={this.state.round / level1.length * 100} status=\"active\" />\n\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                            <h2>LEVEL 1</h2>\n                            <h2>{this.state.round}/{level1.length}</h2>\n                        </div>\n\n                        <span style={{ marginBottom: 0, color: 'grey' }}>Infinitive</span>\n                        <h2>{level1[this.state.round].voca}</h2>\n\n                        <div style={{ fontSize: '1rem' }}>\n                            Answer the voca`s <span style={{ color: 'red' }}>\n                                {this.state.randomTense === 'simple' ? 'simple past' : 'past participle'}\n                            </span>\n                        </div>\n\n\n                        <form style={{ padding: '1rem 0' }} onSubmit={this.handleSubmit}>\n                            <div style={{ display: 'flex' }}>\n                                <Input\n                                    name=\"value\"\n                                    onChange={this.handleChange}\n                                    value={this.state.value}\n                                    id=\"voca\"\n                                    type=\"text\"\n                                />\n\n                                <Button\n                                    className\n                                    type=\"submit\"\n                                    onClick={this.handleSubmit}\n                                >\n                                    Submit\n                                </Button>\n                            </div>\n                        </form>\n\n                        {/* Timer */}\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                            <Button className={`${this.state.timer <= 8 && 'disabled'}`}>5</Button>\n                            <Button className={`${this.state.timer <= 6 && 'disabled'}`}>4</Button>\n                            <Button className={`${this.state.timer <= 4 && 'disabled'}`}>3</Button>\n                            <Button className={`${this.state.timer <= 2 && 'disabled'}`}>2</Button>\n                            <Button className={`${this.state.timer <= 0 && 'disabled'}`}>1</Button>\n                            <Button\n                                onClick={this.handleRestart}\n                                style={{ display: this.state.timeOut ? 'block' : 'none' }}\n                            >\n                                Click to Restart!\n                            </Button>\n                        </div>\n\n\n                        {/* Results */}\n\n                        {this.state.wrongAnswer && (\n                            <React.Fragment>\n                                <Divider />\n                                <h3>Wrong! Correct answer: </h3>\n                                <div>\n                                    <li style={{ display: 'block' }}>\n                                        <p\n                                            onClick={this.handleAudio}\n                                            data-value={level1[this.state.round - 1] ? level1[this.state.round - 1].mp3 : level1[this.state.round].mp3}\n                                        >\n                                            <AudioOutlined />   {this.state.wrongAnswer}\n                                        </p>\n                                    </li>\n\n                                    <audio id=\"audio\" controls style={{ display: 'none' }}>\n                                        <source id=\"audioSource\"></source>\n                                        Your browser does not support the audio format.\n                                    </audio>\n\n                                </div>\n                            </React.Fragment>\n                        )}\n                    </>\n                    :\n                    <>\n                        <h1>Reviews the wrong answers</h1>\n                        {this.state.wrongAnswers.map((answer, index) => (\n                            <div key={index}>\n                                <ul>\n                                    <li>\n                                        {answer}\n                                    </li>\n\n                                </ul>\n                            </div>\n                        ))}\n                        <div style={{ display: 'flex', justifyContent: 'space-evenly' }}>\n                            <Button onClick={this.handleRedirect}>Retry</Button>\n                            <Button><Link to=\"/test2\" >Level2</Link></Button>\n                        </div>\n                    </>\n                }\n            </div>\n        )\n    }\n\n}\n\nexport default Level1;"]},"metadata":{},"sourceType":"module"}