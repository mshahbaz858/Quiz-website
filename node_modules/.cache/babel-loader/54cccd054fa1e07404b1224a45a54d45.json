{"ast":null,"code":"import \"core-js/modules/es.string.small\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Styled from 'rsg-components/Styled';\nimport cx from 'clsx';\nexport var styles = function styles(_ref) {\n  var space = _ref.space,\n      color = _ref.color;\n  return {\n    button: {\n      padding: 2,\n      // Increase clickable area a bit\n      color: color.light,\n      background: 'transparent',\n      transition: 'color 750ms ease-out',\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        isolate: false,\n        color: color.linkHover,\n        transition: 'color 150ms ease-in'\n      },\n      '&:focus': {\n        isolate: false,\n        outline: [[1, 'dotted', color.linkHover]]\n      },\n      '& + &': {\n        isolate: false,\n        marginLeft: space[1]\n      },\n      // Style react-icons icon passed as children\n      '& svg': {\n        width: space[3],\n        height: space[3],\n        color: 'currentColor',\n        cursor: 'inherit'\n      }\n    },\n    isSmall: {\n      '& svg': {\n        width: 14,\n        height: 14\n      }\n    }\n  };\n};\nexport var ToolbarButtonRenderer = function ToolbarButtonRenderer(_ref2) {\n  var _cx;\n\n  var classes = _ref2.classes,\n      className = _ref2.className,\n      onClick = _ref2.onClick,\n      href = _ref2.href,\n      title = _ref2.title,\n      small = _ref2.small,\n      testId = _ref2.testId,\n      children = _ref2.children;\n  var classNames = cx(classes.button, className, (_cx = {}, _cx[classes.isSmall] = small, _cx));\n\n  if (href !== undefined) {\n    return /*#__PURE__*/React.createElement(\"a\", {\n      href: href,\n      title: title,\n      className: classNames,\n      \"aria-label\": title,\n      \"data-testid\": testId\n    }, children);\n  }\n\n  return /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: onClick,\n    title: title,\n    className: classNames,\n    \"aria-label\": title\n  }, children);\n};\nToolbarButtonRenderer.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string.isRequired).isRequired,\n  className: PropTypes.string,\n  href: PropTypes.string,\n  onClick: PropTypes.func,\n  title: PropTypes.string,\n  small: PropTypes.bool,\n  testId: PropTypes.string,\n  children: PropTypes.node\n};\nexport default Styled(styles)(ToolbarButtonRenderer);","map":{"version":3,"sources":["D:/DEVELOPMENT/react-project/Quiz-react/react-quiz-app/node_modules/react-styleguidist/lib/client/rsg-components/ToolbarButton/ToolbarButtonRenderer.js"],"names":["React","PropTypes","Styled","cx","styles","_ref","space","color","button","padding","light","background","transition","cursor","isolate","linkHover","outline","marginLeft","width","height","isSmall","ToolbarButtonRenderer","_ref2","_cx","classes","className","onClick","href","title","small","testId","children","classNames","undefined","createElement","type","propTypes","objectOf","string","isRequired","func","bool","node"],"mappings":"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","sourcesContent":["import \"core-js/modules/es.string.small\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Styled from 'rsg-components/Styled';\nimport cx from 'clsx';\nexport var styles = function styles(_ref) {\n  var space = _ref.space,\n      color = _ref.color;\n  return {\n    button: {\n      padding: 2,\n      // Increase clickable area a bit\n      color: color.light,\n      background: 'transparent',\n      transition: 'color 750ms ease-out',\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        isolate: false,\n        color: color.linkHover,\n        transition: 'color 150ms ease-in'\n      },\n      '&:focus': {\n        isolate: false,\n        outline: [[1, 'dotted', color.linkHover]]\n      },\n      '& + &': {\n        isolate: false,\n        marginLeft: space[1]\n      },\n      // Style react-icons icon passed as children\n      '& svg': {\n        width: space[3],\n        height: space[3],\n        color: 'currentColor',\n        cursor: 'inherit'\n      }\n    },\n    isSmall: {\n      '& svg': {\n        width: 14,\n        height: 14\n      }\n    }\n  };\n};\nexport var ToolbarButtonRenderer = function ToolbarButtonRenderer(_ref2) {\n  var _cx;\n\n  var classes = _ref2.classes,\n      className = _ref2.className,\n      onClick = _ref2.onClick,\n      href = _ref2.href,\n      title = _ref2.title,\n      small = _ref2.small,\n      testId = _ref2.testId,\n      children = _ref2.children;\n  var classNames = cx(classes.button, className, (_cx = {}, _cx[classes.isSmall] = small, _cx));\n\n  if (href !== undefined) {\n    return /*#__PURE__*/React.createElement(\"a\", {\n      href: href,\n      title: title,\n      className: classNames,\n      \"aria-label\": title,\n      \"data-testid\": testId\n    }, children);\n  }\n\n  return /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: onClick,\n    title: title,\n    className: classNames,\n    \"aria-label\": title\n  }, children);\n};\nToolbarButtonRenderer.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string.isRequired).isRequired,\n  className: PropTypes.string,\n  href: PropTypes.string,\n  onClick: PropTypes.func,\n  title: PropTypes.string,\n  small: PropTypes.bool,\n  testId: PropTypes.string,\n  children: PropTypes.node\n};\nexport default Styled(styles)(ToolbarButtonRenderer);"]},"metadata":{},"sourceType":"module"}