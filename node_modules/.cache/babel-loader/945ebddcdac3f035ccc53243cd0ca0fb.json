{"ast":null,"code":"import \"core-js/modules/es.array.filter\";\nimport \"core-js/modules/es.array.for-each\";\nimport \"core-js/modules/es.function.name\";\nimport \"core-js/modules/es.regexp.exec\";\nimport \"core-js/modules/es.string.replace\";\nimport \"core-js/modules/es.string.split\";\nimport \"core-js/modules/es.string.trim\";\nimport \"core-js/modules/web.dom-collections.for-each\"; // Temporary copy to fix\n// https://github.com/lukeed/rewrite-imports/issues/10\n\nvar UNNAMED = /import\\s*['\"]([^'\"]+)['\"];?/gi;\nvar NAMED = /import\\s*(\\*\\s*as)?\\s*(\\w*?)\\s*,?\\s*(?:\\{([\\s\\S]*?)\\})?\\s*from\\s*['\"]([^'\"]+)['\"];?/gi;\n\nfunction alias(key) {\n  key = key.trim();\n  var name = key.split(' as ');\n\n  if (name.length > 1) {\n    key = name.shift();\n  }\n\n  return {\n    key: key,\n    name: name[0]\n  };\n}\n\nvar num;\n\nfunction generate(keys, dep, base, fn) {\n  var tmp = dep.replace(/\\W/g, '_') + '$' + num++; // uniqueness\n\n  var name = alias(tmp).name;\n  dep = fn + \"('\" + dep + \"')\";\n  var obj;\n  var out = \"const \" + name + \" = \" + dep + \";\";\n\n  if (base) {\n    out += \"\\nconst \" + base + \" = \" + tmp + \".default || \" + tmp + \";\";\n  }\n\n  keys.forEach(function (key) {\n    obj = alias(key);\n    out += \"\\nconst \" + obj.name + \" = \" + tmp + \".\" + obj.key + \";\";\n  });\n  return out;\n}\n\nexport default function (str, fn) {\n  if (fn === void 0) {\n    fn = 'require';\n  }\n\n  num = 0;\n  return str.replace(NAMED, function (_, asterisk, base, req, dep) {\n    return generate(req ? req.split(',').filter(function (d) {\n      return d.trim();\n    }) : [], dep, base, fn);\n  }).replace(UNNAMED, function (_, dep) {\n    return fn + \"('\" + dep + \"');\";\n  });\n}","map":{"version":3,"sources":["D:/DEVELOPMENT/react-project/Quiz-react/react-quiz-app/node_modules/react-styleguidist/lib/client/utils/rewriteImports.js"],"names":["UNNAMED","NAMED","alias","key","trim","name","split","length","shift","num","generate","keys","dep","base","fn","tmp","replace","obj","out","forEach","str","_","asterisk","req","filter","d"],"mappings":"AAAA,OAAO,iCAAP;AACA,OAAO,mCAAP;AACA,OAAO,kCAAP;AACA,OAAO,gCAAP;AACA,OAAO,mCAAP;AACA,OAAO,iCAAP;AACA,OAAO,gCAAP;AACA,OAAO,8CAAP,C,CACA;AACA;;AACA,IAAIA,OAAO,GAAG,+BAAd;AACA,IAAIC,KAAK,GAAG,uFAAZ;;AAEA,SAASC,KAAT,CAAeC,GAAf,EAAoB;AAClBA,EAAAA,GAAG,GAAGA,GAAG,CAACC,IAAJ,EAAN;AACA,MAAIC,IAAI,GAAGF,GAAG,CAACG,KAAJ,CAAU,MAAV,CAAX;;AAEA,MAAID,IAAI,CAACE,MAAL,GAAc,CAAlB,EAAqB;AACnBJ,IAAAA,GAAG,GAAGE,IAAI,CAACG,KAAL,EAAN;AACD;;AAED,SAAO;AACLL,IAAAA,GAAG,EAAEA,GADA;AAELE,IAAAA,IAAI,EAAEA,IAAI,CAAC,CAAD;AAFL,GAAP;AAID;;AAED,IAAII,GAAJ;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAwBC,GAAxB,EAA6BC,IAA7B,EAAmCC,EAAnC,EAAuC;AACrC,MAAIC,GAAG,GAAGH,GAAG,CAACI,OAAJ,CAAY,KAAZ,EAAmB,GAAnB,IAA0B,GAA1B,GAAgCP,GAAG,EAA7C,CADqC,CACY;;AAEjD,MAAIJ,IAAI,GAAGH,KAAK,CAACa,GAAD,CAAL,CAAWV,IAAtB;AACAO,EAAAA,GAAG,GAAGE,EAAE,GAAG,IAAL,GAAYF,GAAZ,GAAkB,IAAxB;AACA,MAAIK,GAAJ;AACA,MAAIC,GAAG,GAAG,WAAWb,IAAX,GAAkB,KAAlB,GAA0BO,GAA1B,GAAgC,GAA1C;;AAEA,MAAIC,IAAJ,EAAU;AACRK,IAAAA,GAAG,IAAI,aAAaL,IAAb,GAAoB,KAApB,GAA4BE,GAA5B,GAAkC,cAAlC,GAAmDA,GAAnD,GAAyD,GAAhE;AACD;;AAEDJ,EAAAA,IAAI,CAACQ,OAAL,CAAa,UAAUhB,GAAV,EAAe;AAC1Bc,IAAAA,GAAG,GAAGf,KAAK,CAACC,GAAD,CAAX;AACAe,IAAAA,GAAG,IAAI,aAAaD,GAAG,CAACZ,IAAjB,GAAwB,KAAxB,GAAgCU,GAAhC,GAAsC,GAAtC,GAA4CE,GAAG,CAACd,GAAhD,GAAsD,GAA7D;AACD,GAHD;AAIA,SAAOe,GAAP;AACD;;AAED,eAAe,UAAUE,GAAV,EAAeN,EAAf,EAAmB;AAChC,MAAIA,EAAE,KAAK,KAAK,CAAhB,EAAmB;AACjBA,IAAAA,EAAE,GAAG,SAAL;AACD;;AAEDL,EAAAA,GAAG,GAAG,CAAN;AACA,SAAOW,GAAG,CAACJ,OAAJ,CAAYf,KAAZ,EAAmB,UAAUoB,CAAV,EAAaC,QAAb,EAAuBT,IAAvB,EAA6BU,GAA7B,EAAkCX,GAAlC,EAAuC;AAC/D,WAAOF,QAAQ,CAACa,GAAG,GAAGA,GAAG,CAACjB,KAAJ,CAAU,GAAV,EAAekB,MAAf,CAAsB,UAAUC,CAAV,EAAa;AACvD,aAAOA,CAAC,CAACrB,IAAF,EAAP;AACD,KAFqB,CAAH,GAEd,EAFU,EAENQ,GAFM,EAEDC,IAFC,EAEKC,EAFL,CAAf;AAGD,GAJM,EAIJE,OAJI,CAIIhB,OAJJ,EAIa,UAAUqB,CAAV,EAAaT,GAAb,EAAkB;AACpC,WAAOE,EAAE,GAAG,IAAL,GAAYF,GAAZ,GAAkB,KAAzB;AACD,GANM,CAAP;AAOD","sourcesContent":["import \"core-js/modules/es.array.filter\";\nimport \"core-js/modules/es.array.for-each\";\nimport \"core-js/modules/es.function.name\";\nimport \"core-js/modules/es.regexp.exec\";\nimport \"core-js/modules/es.string.replace\";\nimport \"core-js/modules/es.string.split\";\nimport \"core-js/modules/es.string.trim\";\nimport \"core-js/modules/web.dom-collections.for-each\";\n// Temporary copy to fix\n// https://github.com/lukeed/rewrite-imports/issues/10\nvar UNNAMED = /import\\s*['\"]([^'\"]+)['\"];?/gi;\nvar NAMED = /import\\s*(\\*\\s*as)?\\s*(\\w*?)\\s*,?\\s*(?:\\{([\\s\\S]*?)\\})?\\s*from\\s*['\"]([^'\"]+)['\"];?/gi;\n\nfunction alias(key) {\n  key = key.trim();\n  var name = key.split(' as ');\n\n  if (name.length > 1) {\n    key = name.shift();\n  }\n\n  return {\n    key: key,\n    name: name[0]\n  };\n}\n\nvar num;\n\nfunction generate(keys, dep, base, fn) {\n  var tmp = dep.replace(/\\W/g, '_') + '$' + num++; // uniqueness\n\n  var name = alias(tmp).name;\n  dep = fn + \"('\" + dep + \"')\";\n  var obj;\n  var out = \"const \" + name + \" = \" + dep + \";\";\n\n  if (base) {\n    out += \"\\nconst \" + base + \" = \" + tmp + \".default || \" + tmp + \";\";\n  }\n\n  keys.forEach(function (key) {\n    obj = alias(key);\n    out += \"\\nconst \" + obj.name + \" = \" + tmp + \".\" + obj.key + \";\";\n  });\n  return out;\n}\n\nexport default function (str, fn) {\n  if (fn === void 0) {\n    fn = 'require';\n  }\n\n  num = 0;\n  return str.replace(NAMED, function (_, asterisk, base, req, dep) {\n    return generate(req ? req.split(',').filter(function (d) {\n      return d.trim();\n    }) : [], dep, base, fn);\n  }).replace(UNNAMED, function (_, dep) {\n    return fn + \"('\" + dep + \"');\";\n  });\n}"]},"metadata":{},"sourceType":"module"}