{"ast":null,"code":"import \"core-js/modules/es.function.name\";\nimport React from 'react';\nimport Type from 'rsg-components/Type';\nimport ComplexType from 'rsg-components/ComplexType';\nimport { getType } from './util';\nexport function renderType(type) {\n  if (!type) {\n    return 'unknown';\n  }\n\n  var name = type.name;\n\n  switch (name) {\n    case 'arrayOf':\n      return type.value.name + \"[]\";\n\n    case 'objectOf':\n      return \"{\" + renderType(type.value) + \"}\";\n\n    case 'instanceOf':\n      return type.value;\n\n    default:\n      return name;\n  }\n}\n\nfunction renderAdvancedType(type) {\n  switch (type.name) {\n    case 'enum':\n      return /*#__PURE__*/React.createElement(Type, null, type.name);\n\n    case 'literal':\n      return /*#__PURE__*/React.createElement(Type, null, type.value);\n\n    case 'signature':\n      return /*#__PURE__*/React.createElement(ComplexType, {\n        name: type.type,\n        raw: type.raw\n      });\n\n    case 'union':\n    case 'tuple':\n      return /*#__PURE__*/React.createElement(ComplexType, {\n        name: type.name,\n        raw: type.raw\n      });\n\n    default:\n      return /*#__PURE__*/React.createElement(Type, null, type.raw || type.name);\n  }\n}\n\nexport default function renderTypeColumn(prop) {\n  var type = getType(prop);\n\n  if (!type) {\n    return null;\n  }\n\n  if (prop.flowType || prop.tsType) {\n    return renderAdvancedType(type);\n  }\n\n  return /*#__PURE__*/React.createElement(Type, null, renderType(type));\n}","map":{"version":3,"sources":["D:/DEVELOPMENT/react-project/Quiz-react/react-quiz-app/node_modules/react-styleguidist/lib/client/rsg-components/Props/renderType.js"],"names":["React","Type","ComplexType","getType","renderType","type","name","value","renderAdvancedType","createElement","raw","renderTypeColumn","prop","flowType","tsType"],"mappings":"AAAA,OAAO,kCAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,OAAO,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AAC/B,MAAI,CAACA,IAAL,EAAW;AACT,WAAO,SAAP;AACD;;AAED,MAAIC,IAAI,GAAGD,IAAI,CAACC,IAAhB;;AAEA,UAAQA,IAAR;AACE,SAAK,SAAL;AACE,aAAOD,IAAI,CAACE,KAAL,CAAWD,IAAX,GAAkB,IAAzB;;AAEF,SAAK,UAAL;AACE,aAAO,MAAMF,UAAU,CAACC,IAAI,CAACE,KAAN,CAAhB,GAA+B,GAAtC;;AAEF,SAAK,YAAL;AACE,aAAOF,IAAI,CAACE,KAAZ;;AAEF;AACE,aAAOD,IAAP;AAXJ;AAaD;;AAED,SAASE,kBAAT,CAA4BH,IAA5B,EAAkC;AAChC,UAAQA,IAAI,CAACC,IAAb;AACE,SAAK,MAAL;AACE,aAAO,aAAaN,KAAK,CAACS,aAAN,CAAoBR,IAApB,EAA0B,IAA1B,EAAgCI,IAAI,CAACC,IAArC,CAApB;;AAEF,SAAK,SAAL;AACE,aAAO,aAAaN,KAAK,CAACS,aAAN,CAAoBR,IAApB,EAA0B,IAA1B,EAAgCI,IAAI,CAACE,KAArC,CAApB;;AAEF,SAAK,WAAL;AACE,aAAO,aAAaP,KAAK,CAACS,aAAN,CAAoBP,WAApB,EAAiC;AACnDI,QAAAA,IAAI,EAAED,IAAI,CAACA,IADwC;AAEnDK,QAAAA,GAAG,EAAEL,IAAI,CAACK;AAFyC,OAAjC,CAApB;;AAKF,SAAK,OAAL;AACA,SAAK,OAAL;AACE,aAAO,aAAaV,KAAK,CAACS,aAAN,CAAoBP,WAApB,EAAiC;AACnDI,QAAAA,IAAI,EAAED,IAAI,CAACC,IADwC;AAEnDI,QAAAA,GAAG,EAAEL,IAAI,CAACK;AAFyC,OAAjC,CAApB;;AAKF;AACE,aAAO,aAAaV,KAAK,CAACS,aAAN,CAAoBR,IAApB,EAA0B,IAA1B,EAAgCI,IAAI,CAACK,GAAL,IAAYL,IAAI,CAACC,IAAjD,CAApB;AArBJ;AAuBD;;AAED,eAAe,SAASK,gBAAT,CAA0BC,IAA1B,EAAgC;AAC7C,MAAIP,IAAI,GAAGF,OAAO,CAACS,IAAD,CAAlB;;AAEA,MAAI,CAACP,IAAL,EAAW;AACT,WAAO,IAAP;AACD;;AAED,MAAIO,IAAI,CAACC,QAAL,IAAiBD,IAAI,CAACE,MAA1B,EAAkC;AAChC,WAAON,kBAAkB,CAACH,IAAD,CAAzB;AACD;;AAED,SAAO,aAAaL,KAAK,CAACS,aAAN,CAAoBR,IAApB,EAA0B,IAA1B,EAAgCG,UAAU,CAACC,IAAD,CAA1C,CAApB;AACD","sourcesContent":["import \"core-js/modules/es.function.name\";\nimport React from 'react';\nimport Type from 'rsg-components/Type';\nimport ComplexType from 'rsg-components/ComplexType';\nimport { getType } from './util';\nexport function renderType(type) {\n  if (!type) {\n    return 'unknown';\n  }\n\n  var name = type.name;\n\n  switch (name) {\n    case 'arrayOf':\n      return type.value.name + \"[]\";\n\n    case 'objectOf':\n      return \"{\" + renderType(type.value) + \"}\";\n\n    case 'instanceOf':\n      return type.value;\n\n    default:\n      return name;\n  }\n}\n\nfunction renderAdvancedType(type) {\n  switch (type.name) {\n    case 'enum':\n      return /*#__PURE__*/React.createElement(Type, null, type.name);\n\n    case 'literal':\n      return /*#__PURE__*/React.createElement(Type, null, type.value);\n\n    case 'signature':\n      return /*#__PURE__*/React.createElement(ComplexType, {\n        name: type.type,\n        raw: type.raw\n      });\n\n    case 'union':\n    case 'tuple':\n      return /*#__PURE__*/React.createElement(ComplexType, {\n        name: type.name,\n        raw: type.raw\n      });\n\n    default:\n      return /*#__PURE__*/React.createElement(Type, null, type.raw || type.name);\n  }\n}\n\nexport default function renderTypeColumn(prop) {\n  var type = getType(prop);\n\n  if (!type) {\n    return null;\n  }\n\n  if (prop.flowType || prop.tsType) {\n    return renderAdvancedType(type);\n  }\n\n  return /*#__PURE__*/React.createElement(Type, null, renderType(type));\n}"]},"metadata":{},"sourceType":"module"}