{"ast":null,"code":"import find from 'lodash/find';\n/**\n * Recursively finds a section with a given name (exact match)\n *\n * @param  {Array}  sections\n * @param  {string} name\n * @return {object}\n */\n\nexport default function findSection(sections, name) {\n  // We're using Lodash because IE11 doesn't support Array.find.\n  var found = find(sections, {\n    name: name\n  });\n\n  if (found) {\n    return found;\n  }\n\n  for (var i = 0; i < sections.length; i++) {\n    var section = sections[i];\n\n    if (!section.sections || section.sections.length === 0) {\n      continue;\n    }\n\n    var foundInSubsection = findSection(section.sections, name);\n\n    if (foundInSubsection) {\n      return foundInSubsection;\n    }\n  }\n\n  return undefined;\n}","map":{"version":3,"sources":["D:/DEVELOPMENT/react-project/Quiz-react/react-quiz-app/node_modules/react-styleguidist/lib/client/utils/findSection.js"],"names":["find","findSection","sections","name","found","i","length","section","foundInSubsection","undefined"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,aAAjB;AAEA;;;;;;;;AAOA,eAAe,SAASC,WAAT,CAAqBC,QAArB,EAA+BC,IAA/B,EAAqC;AAClD;AACA,MAAIC,KAAK,GAAGJ,IAAI,CAACE,QAAD,EAAW;AACzBC,IAAAA,IAAI,EAAEA;AADmB,GAAX,CAAhB;;AAIA,MAAIC,KAAJ,EAAW;AACT,WAAOA,KAAP;AACD;;AAED,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,CAACI,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxC,QAAIE,OAAO,GAAGL,QAAQ,CAACG,CAAD,CAAtB;;AAEA,QAAI,CAACE,OAAO,CAACL,QAAT,IAAqBK,OAAO,CAACL,QAAR,CAAiBI,MAAjB,KAA4B,CAArD,EAAwD;AACtD;AACD;;AAED,QAAIE,iBAAiB,GAAGP,WAAW,CAACM,OAAO,CAACL,QAAT,EAAmBC,IAAnB,CAAnC;;AAEA,QAAIK,iBAAJ,EAAuB;AACrB,aAAOA,iBAAP;AACD;AACF;;AAED,SAAOC,SAAP;AACD","sourcesContent":["import find from 'lodash/find';\n\n/**\n * Recursively finds a section with a given name (exact match)\n *\n * @param  {Array}  sections\n * @param  {string} name\n * @return {object}\n */\nexport default function findSection(sections, name) {\n  // We're using Lodash because IE11 doesn't support Array.find.\n  var found = find(sections, {\n    name: name\n  });\n\n  if (found) {\n    return found;\n  }\n\n  for (var i = 0; i < sections.length; i++) {\n    var section = sections[i];\n\n    if (!section.sections || section.sections.length === 0) {\n      continue;\n    }\n\n    var foundInSubsection = findSection(section.sections, name);\n\n    if (foundInSubsection) {\n      return foundInSubsection;\n    }\n  }\n\n  return undefined;\n}"]},"metadata":{},"sourceType":"module"}