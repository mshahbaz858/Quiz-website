{"ast":null,"code":"import \"core-js/modules/es.regexp.exec\";\nimport \"core-js/modules/es.string.match\";\nimport \"core-js/modules/es.string.trim\";\nimport { transform } from 'buble';\nimport transpileImports from './transpileImports';\n\nvar compile = function compile(code, config) {\n  return transform(code, config).code;\n};\n\nvar startsWithJsx = function startsWithJsx(code) {\n  return !!code.trim().match(/^</);\n};\n\nvar wrapCodeInFragment = function wrapCodeInFragment(code) {\n  return \"<React.Fragment>\" + code + \"</React.Fragment>;\";\n};\n/*\n * 1. Wrap code in React Fragment if it starts with JSX element\n * 2. Transform import statements into require() calls\n * 3. Compile code using Buble\n */\n\n\nexport default function compileCode(code, compilerConfig, onError) {\n  try {\n    var wrappedCode = startsWithJsx(code) ? wrapCodeInFragment(code) : code;\n    var compiledCode = compile(wrappedCode, compilerConfig);\n    return transpileImports(compiledCode);\n  } catch (err) {\n    if (onError) {\n      onError(err);\n    }\n  }\n\n  return '';\n}","map":{"version":3,"sources":["D:/DEVELOPMENT/react-project/Quiz-react/react-quiz-app/node_modules/react-styleguidist/lib/client/utils/compileCode.js"],"names":["transform","transpileImports","compile","code","config","startsWithJsx","trim","match","wrapCodeInFragment","compileCode","compilerConfig","onError","wrappedCode","compiledCode","err"],"mappings":"AAAA,OAAO,gCAAP;AACA,OAAO,iCAAP;AACA,OAAO,gCAAP;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAEA,IAAIC,OAAO,GAAG,SAASA,OAAT,CAAiBC,IAAjB,EAAuBC,MAAvB,EAA+B;AAC3C,SAAOJ,SAAS,CAACG,IAAD,EAAOC,MAAP,CAAT,CAAwBD,IAA/B;AACD,CAFD;;AAIA,IAAIE,aAAa,GAAG,SAASA,aAAT,CAAuBF,IAAvB,EAA6B;AAC/C,SAAO,CAAC,CAACA,IAAI,CAACG,IAAL,GAAYC,KAAZ,CAAkB,IAAlB,CAAT;AACD,CAFD;;AAIA,IAAIC,kBAAkB,GAAG,SAASA,kBAAT,CAA4BL,IAA5B,EAAkC;AACzD,SAAO,qBAAqBA,IAArB,GAA4B,oBAAnC;AACD,CAFD;AAGA;;;;;;;AAOA,eAAe,SAASM,WAAT,CAAqBN,IAArB,EAA2BO,cAA3B,EAA2CC,OAA3C,EAAoD;AACjE,MAAI;AACF,QAAIC,WAAW,GAAGP,aAAa,CAACF,IAAD,CAAb,GAAsBK,kBAAkB,CAACL,IAAD,CAAxC,GAAiDA,IAAnE;AACA,QAAIU,YAAY,GAAGX,OAAO,CAACU,WAAD,EAAcF,cAAd,CAA1B;AACA,WAAOT,gBAAgB,CAACY,YAAD,CAAvB;AACD,GAJD,CAIE,OAAOC,GAAP,EAAY;AACZ,QAAIH,OAAJ,EAAa;AACXA,MAAAA,OAAO,CAACG,GAAD,CAAP;AACD;AACF;;AAED,SAAO,EAAP;AACD","sourcesContent":["import \"core-js/modules/es.regexp.exec\";\nimport \"core-js/modules/es.string.match\";\nimport \"core-js/modules/es.string.trim\";\nimport { transform } from 'buble';\nimport transpileImports from './transpileImports';\n\nvar compile = function compile(code, config) {\n  return transform(code, config).code;\n};\n\nvar startsWithJsx = function startsWithJsx(code) {\n  return !!code.trim().match(/^</);\n};\n\nvar wrapCodeInFragment = function wrapCodeInFragment(code) {\n  return \"<React.Fragment>\" + code + \"</React.Fragment>;\";\n};\n/*\n * 1. Wrap code in React Fragment if it starts with JSX element\n * 2. Transform import statements into require() calls\n * 3. Compile code using Buble\n */\n\n\nexport default function compileCode(code, compilerConfig, onError) {\n  try {\n    var wrappedCode = startsWithJsx(code) ? wrapCodeInFragment(code) : code;\n    var compiledCode = compile(wrappedCode, compilerConfig);\n    return transpileImports(compiledCode);\n  } catch (err) {\n    if (onError) {\n      onError(err);\n    }\n  }\n\n  return '';\n}"]},"metadata":{},"sourceType":"module"}