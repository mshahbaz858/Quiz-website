{"ast":null,"code":"import \"core-js/modules/es.object.assign\";\nimport React, { isValidElement } from 'react';\nimport PropTypes from 'prop-types';\nimport { compiler } from 'markdown-to-jsx';\nimport stripHtmlComments from 'strip-html-comments';\nimport Link from 'rsg-components/Link';\nimport Text from 'rsg-components/Text';\nimport Para from 'rsg-components/Para';\nimport MarkdownHeading from 'rsg-components/Markdown/MarkdownHeading';\nimport List from 'rsg-components/Markdown/List';\nimport Blockquote from 'rsg-components/Markdown/Blockquote';\nimport PreBase from 'rsg-components/Markdown/Pre';\nimport Code from 'rsg-components/Code';\nimport Checkbox from 'rsg-components/Markdown/Checkbox';\nimport Hr from 'rsg-components/Markdown/Hr';\nimport { Details, DetailsSummary } from 'rsg-components/Markdown/Details';\nimport { Table, TableHead, TableBody, TableRow, TableCell } from 'rsg-components/Markdown/Table';\n\nvar Pre = function Pre(props) {\n  if (isValidElement(props.children)) {\n    // Avoid rendering <Code> inside <Pre>\n    return /*#__PURE__*/React.createElement(PreBase, props.children.props);\n  }\n\n  return /*#__PURE__*/React.createElement(PreBase, props);\n};\n\nPre.propTypes = {\n  children: PropTypes.node\n};\nexport var baseOverrides = {\n  a: {\n    component: Link\n  },\n  h1: {\n    component: MarkdownHeading,\n    props: {\n      level: 1\n    }\n  },\n  h2: {\n    component: MarkdownHeading,\n    props: {\n      level: 2\n    }\n  },\n  h3: {\n    component: MarkdownHeading,\n    props: {\n      level: 3\n    }\n  },\n  h4: {\n    component: MarkdownHeading,\n    props: {\n      level: 4\n    }\n  },\n  h5: {\n    component: MarkdownHeading,\n    props: {\n      level: 5\n    }\n  },\n  h6: {\n    component: MarkdownHeading,\n    props: {\n      level: 6\n    }\n  },\n  p: {\n    component: Para,\n    props: {\n      semantic: 'p'\n    }\n  },\n  em: {\n    component: Text,\n    props: {\n      semantic: 'em'\n    }\n  },\n  strong: {\n    component: Text,\n    props: {\n      semantic: 'strong'\n    }\n  },\n  ul: {\n    component: List\n  },\n  ol: {\n    component: List,\n    props: {\n      ordered: true\n    }\n  },\n  blockquote: {\n    component: Blockquote\n  },\n  code: {\n    component: Code\n  },\n  pre: {\n    component: Pre\n  },\n  input: {\n    component: Checkbox\n  },\n  hr: {\n    component: Hr\n  },\n  table: {\n    component: Table\n  },\n  thead: {\n    component: TableHead\n  },\n  th: {\n    component: TableCell,\n    props: {\n      header: true\n    }\n  },\n  tbody: {\n    component: TableBody\n  },\n  tr: {\n    component: TableRow\n  },\n  td: {\n    component: TableCell\n  },\n  details: {\n    component: Details\n  },\n  summary: {\n    component: DetailsSummary\n  }\n};\nexport var inlineOverrides = Object.assign({}, baseOverrides, {\n  p: {\n    component: Text\n  }\n});\nexport var Markdown = function Markdown(_ref) {\n  var text = _ref.text,\n      inline = _ref.inline;\n  var overrides = inline ? inlineOverrides : baseOverrides;\n  return compiler(stripHtmlComments(text), {\n    overrides: overrides,\n    forceBlock: true\n  });\n};\nMarkdown.propTypes = {\n  text: PropTypes.string.isRequired,\n  inline: PropTypes.bool\n};\nexport default Markdown;","map":{"version":3,"sources":["D:/DEVELOPMENT/react-project/Quiz-react/react-quiz-app/node_modules/react-styleguidist/lib/client/rsg-components/Markdown/Markdown.js"],"names":["React","isValidElement","PropTypes","compiler","stripHtmlComments","Link","Text","Para","MarkdownHeading","List","Blockquote","PreBase","Code","Checkbox","Hr","Details","DetailsSummary","Table","TableHead","TableBody","TableRow","TableCell","Pre","props","children","createElement","propTypes","node","baseOverrides","a","component","h1","level","h2","h3","h4","h5","h6","p","semantic","em","strong","ul","ol","ordered","blockquote","code","pre","input","hr","table","thead","th","header","tbody","tr","td","details","summary","inlineOverrides","Object","assign","Markdown","_ref","text","inline","overrides","forceBlock","string","isRequired","bool"],"mappings":"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","sourcesContent":["import \"core-js/modules/es.object.assign\";\nimport React, { isValidElement } from 'react';\nimport PropTypes from 'prop-types';\nimport { compiler } from 'markdown-to-jsx';\nimport stripHtmlComments from 'strip-html-comments';\nimport Link from 'rsg-components/Link';\nimport Text from 'rsg-components/Text';\nimport Para from 'rsg-components/Para';\nimport MarkdownHeading from 'rsg-components/Markdown/MarkdownHeading';\nimport List from 'rsg-components/Markdown/List';\nimport Blockquote from 'rsg-components/Markdown/Blockquote';\nimport PreBase from 'rsg-components/Markdown/Pre';\nimport Code from 'rsg-components/Code';\nimport Checkbox from 'rsg-components/Markdown/Checkbox';\nimport Hr from 'rsg-components/Markdown/Hr';\nimport { Details, DetailsSummary } from 'rsg-components/Markdown/Details';\nimport { Table, TableHead, TableBody, TableRow, TableCell } from 'rsg-components/Markdown/Table';\n\nvar Pre = function Pre(props) {\n  if (isValidElement(props.children)) {\n    // Avoid rendering <Code> inside <Pre>\n    return /*#__PURE__*/React.createElement(PreBase, props.children.props);\n  }\n\n  return /*#__PURE__*/React.createElement(PreBase, props);\n};\n\nPre.propTypes = {\n  children: PropTypes.node\n};\nexport var baseOverrides = {\n  a: {\n    component: Link\n  },\n  h1: {\n    component: MarkdownHeading,\n    props: {\n      level: 1\n    }\n  },\n  h2: {\n    component: MarkdownHeading,\n    props: {\n      level: 2\n    }\n  },\n  h3: {\n    component: MarkdownHeading,\n    props: {\n      level: 3\n    }\n  },\n  h4: {\n    component: MarkdownHeading,\n    props: {\n      level: 4\n    }\n  },\n  h5: {\n    component: MarkdownHeading,\n    props: {\n      level: 5\n    }\n  },\n  h6: {\n    component: MarkdownHeading,\n    props: {\n      level: 6\n    }\n  },\n  p: {\n    component: Para,\n    props: {\n      semantic: 'p'\n    }\n  },\n  em: {\n    component: Text,\n    props: {\n      semantic: 'em'\n    }\n  },\n  strong: {\n    component: Text,\n    props: {\n      semantic: 'strong'\n    }\n  },\n  ul: {\n    component: List\n  },\n  ol: {\n    component: List,\n    props: {\n      ordered: true\n    }\n  },\n  blockquote: {\n    component: Blockquote\n  },\n  code: {\n    component: Code\n  },\n  pre: {\n    component: Pre\n  },\n  input: {\n    component: Checkbox\n  },\n  hr: {\n    component: Hr\n  },\n  table: {\n    component: Table\n  },\n  thead: {\n    component: TableHead\n  },\n  th: {\n    component: TableCell,\n    props: {\n      header: true\n    }\n  },\n  tbody: {\n    component: TableBody\n  },\n  tr: {\n    component: TableRow\n  },\n  td: {\n    component: TableCell\n  },\n  details: {\n    component: Details\n  },\n  summary: {\n    component: DetailsSummary\n  }\n};\nexport var inlineOverrides = Object.assign({}, baseOverrides, {\n  p: {\n    component: Text\n  }\n});\nexport var Markdown = function Markdown(_ref) {\n  var text = _ref.text,\n      inline = _ref.inline;\n  var overrides = inline ? inlineOverrides : baseOverrides;\n  return compiler(stripHtmlComments(text), {\n    overrides: overrides,\n    forceBlock: true\n  });\n};\nMarkdown.propTypes = {\n  text: PropTypes.string.isRequired,\n  inline: PropTypes.bool\n};\nexport default Markdown;"]},"metadata":{},"sourceType":"module"}