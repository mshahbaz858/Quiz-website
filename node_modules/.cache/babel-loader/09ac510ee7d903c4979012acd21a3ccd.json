{"ast":null,"code":"import \"core-js/modules/es.array.filter\";\nimport \"core-js/modules/es.regexp.exec\";\nimport \"core-js/modules/es.string.match\";\nimport { hasInHash, getHashAsArray } from './handleHash';\n\nfunction hasDigitsOnly(item) {\n  return item.match(/^\\d+$/) !== null;\n}\n/**\n * Returns an object containing component/section name and, optionally, an example index\n * from hash part or page URL:\n * #!/Button → { targetName: 'Button' }\n * #!/Button/1 → { targetName: 'Button', targetIndex: 1 }\n *\n * @param {string} hash\n * @returns {object}\n */\n\n\nexport default function getInfoFromHash(hash) {\n  var shouldIsolate = hasInHash(hash, '#!/');\n\n  if (shouldIsolate || hasInHash(hash, '#/')) {\n    var hashArray = getHashAsArray(hash, shouldIsolate ? '#!/' : '#/');\n    var targetHash = hashArray[hashArray.length - 1];\n    return {\n      isolate: shouldIsolate,\n      hashArray: hashArray.filter(function (item) {\n        return !hasDigitsOnly(item);\n      }),\n      targetName: hashArray[0],\n      targetIndex: hasDigitsOnly(targetHash) ? parseInt(targetHash, 10) : undefined\n    };\n  }\n\n  return {};\n}","map":{"version":3,"sources":["D:/DEVELOPMENT/react-project/Quiz-react/react-quiz-app/node_modules/react-styleguidist/lib/client/utils/getInfoFromHash.js"],"names":["hasInHash","getHashAsArray","hasDigitsOnly","item","match","getInfoFromHash","hash","shouldIsolate","hashArray","targetHash","length","isolate","filter","targetName","targetIndex","parseInt","undefined"],"mappings":"AAAA,OAAO,iCAAP;AACA,OAAO,gCAAP;AACA,OAAO,iCAAP;AACA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,cAA1C;;AAEA,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAC3B,SAAOA,IAAI,CAACC,KAAL,CAAW,OAAX,MAAwB,IAA/B;AACD;AACD;;;;;;;;;;;AAWA,eAAe,SAASC,eAAT,CAAyBC,IAAzB,EAA+B;AAC5C,MAAIC,aAAa,GAAGP,SAAS,CAACM,IAAD,EAAO,KAAP,CAA7B;;AAEA,MAAIC,aAAa,IAAIP,SAAS,CAACM,IAAD,EAAO,IAAP,CAA9B,EAA4C;AAC1C,QAAIE,SAAS,GAAGP,cAAc,CAACK,IAAD,EAAOC,aAAa,GAAG,KAAH,GAAW,IAA/B,CAA9B;AACA,QAAIE,UAAU,GAAGD,SAAS,CAACA,SAAS,CAACE,MAAV,GAAmB,CAApB,CAA1B;AACA,WAAO;AACLC,MAAAA,OAAO,EAAEJ,aADJ;AAELC,MAAAA,SAAS,EAAEA,SAAS,CAACI,MAAV,CAAiB,UAAUT,IAAV,EAAgB;AAC1C,eAAO,CAACD,aAAa,CAACC,IAAD,CAArB;AACD,OAFU,CAFN;AAKLU,MAAAA,UAAU,EAAEL,SAAS,CAAC,CAAD,CALhB;AAMLM,MAAAA,WAAW,EAAEZ,aAAa,CAACO,UAAD,CAAb,GAA4BM,QAAQ,CAACN,UAAD,EAAa,EAAb,CAApC,GAAuDO;AAN/D,KAAP;AAQD;;AAED,SAAO,EAAP;AACD","sourcesContent":["import \"core-js/modules/es.array.filter\";\nimport \"core-js/modules/es.regexp.exec\";\nimport \"core-js/modules/es.string.match\";\nimport { hasInHash, getHashAsArray } from './handleHash';\n\nfunction hasDigitsOnly(item) {\n  return item.match(/^\\d+$/) !== null;\n}\n/**\n * Returns an object containing component/section name and, optionally, an example index\n * from hash part or page URL:\n * #!/Button → { targetName: 'Button' }\n * #!/Button/1 → { targetName: 'Button', targetIndex: 1 }\n *\n * @param {string} hash\n * @returns {object}\n */\n\n\nexport default function getInfoFromHash(hash) {\n  var shouldIsolate = hasInHash(hash, '#!/');\n\n  if (shouldIsolate || hasInHash(hash, '#/')) {\n    var hashArray = getHashAsArray(hash, shouldIsolate ? '#!/' : '#/');\n    var targetHash = hashArray[hashArray.length - 1];\n    return {\n      isolate: shouldIsolate,\n      hashArray: hashArray.filter(function (item) {\n        return !hasDigitsOnly(item);\n      }),\n      targetName: hashArray[0],\n      targetIndex: hasDigitsOnly(targetHash) ? parseInt(targetHash, 10) : undefined\n    };\n  }\n\n  return {};\n}"]},"metadata":{},"sourceType":"module"}